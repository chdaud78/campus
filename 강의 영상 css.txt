기본 문법
선택자(대상) { 속성(스타일의 종류): 값(스타일의 값); }
ex) div {color:red; font-size:50px;}

----------------------------------------------------

css 선언 방식
1. 내장 방식
 ㄴ <style></style>의 내용으로 스타일을 작성하는 방식

2. 링크 방식
 ㄴ <link />로 외부 css 문서를 가져와서 연결하는 방식
 ㄴ 병렬 연결

3. 인라인 방식
 ㄴ 요소의 스타일 속성에 직접 스타일을 작성하는 방식

4. @import 방식
 ㄴ css @import 규칙으로 css 문서 안에서 또 다른 css 문서를 가져와 연결하는 방식
 ㄴ 직렬 연결
 ㄴ 지연 됨.

 ----------------------------------------------------

 css 선택자
 1. 기본
  ㄴ * : 모든 요소를 선택(전체 선택자)
  ㄴ 태그 : 태그 이름이 ~인 요소 선택
  ㄴ 클래스(.) : html class 속성의 값 선택
  ㄴ 아이디(#) : Html id 속성의 값 선택

 2. 복합
  ㄴ 일치 : 선택자 여러개를 동시에 만족하는 요소 선택.(ex) span.orange / 태그를 제일 먼저 .orangespan 이렇게 안됨.)
  ㄴ 자식(>) : 선택자의 자식 요소 선택 (ex) ul > .orange)
  ㄴ 하위(공백) : 선택자의 하위 요소 선택 (ex) div .orange)
  ㄴ 인접 형제(+) : 선택자의 다음 형제 요소 하나를 선택 (ex) .orange + li)
  ㄴ 일반 형제(~) : 선택자의 다음 형제 요소 모두를 선택 (ex) .orange ~ li)

 3. 가상 클래스
  ㄴ :hover : 마우스 커서가 올라가 있는 동안 선택
  ㄴ :active : 마우스를 클릭하고 있는 동안 선택
  ㄴ :focus : 포커스가 되면 선택(focus 가능한 요소만 대표적으로 input이 가능 tabindex=-1으로 설정시 focus 가능하게 만듬.)
  ㄴ :first-child : 선택자가 형제 요소 중 첫째라면 선택
  ㄴ :last-child : 선택자가 형제 요소 중 막내라면 선택
  ㄴ :nth-child(n) : 선택자가 형제 요소 중 n째라면 선택 (n은 0부터 시작)
  ㄴ ABC:not(XYZ) : XYZ선택자가 아닌 요소 선택
  cf)
  .fruits span:first-child -> 딸기 - span은 형제 중 첫째이므로 선택
  .fruits div:first-child -> x - div는 형제 중 첫째가 아니므로 선택
  .fruits h3:last-child -> 사과 - h3는 형제 중 막내이므로 선택
  .fruits *:nth-child(2) -> 수박 - 모든 형제들 중 2번째는 수박
  .fruits *:nth-child(2n) -> 수박, 망고 - 모든 형제들중 2n번(짝수) 선택.
  .fruits *:nth-child(2n+1) -> 딸기, 오렌지, 사과 - 모든 형제들중 2n+1번(홀수) 선택.
  .fruits *:nth-child(n+2) -> 수박, 오렌지, 망고, 사과 - 모든 형제들중 2번째 이후 선택.
  .fruits *:not(span) -> 오렌지, 망고, 사과 - fruits 하위 모든 요소들 중 span이 아닌것은 망고 사과
  <div class="fruits">
    <span>딸기</span>
    <span>수박</span>
    <div>오렌지</div>
    <p>망고</p>
    <h3>사과</h3>
  </div>

 4. 가상 요소
  ㄴ ::before : 선택자 요소의 내부 앞에 내용을 삽입(인라인 요소 / 내용을 삽입 하여야 하므로 content 속성을 꼭 사용해야함)
  ㄴ ::after : 선택자 요소의 내부 뒤에 내요을 삽입(인라인 요소 / 내용을 삽입 하여야 하므로 content 속성을 꼭 사용해야함)

 5. 속성
  ㄴ [ABC] : 속성 ABC를 포함한 요소 선택 (ex) [disabled] - disabled라는 속성을 포함한 요소 선택)
  ㄴ [ABC="XYZ"] 속성 ABC를 포함하고 값이 XYZ인 요소 선택 (ex) [type="password"] type속성이고 값이 password인 요소 선택)

--------------------------------------------------

css 스타일 상속 : 하위 요소에 css 영향을 끼치는 것.

상속 되는 css 속성들
 ㄴ 모두 글자/문자 관련 속성들
 ㄴ font-style
 ㄴ font-weight
 ㄴ font-size
 ㄴ line-height
 ㄴ font-family
 ㄴ color
 ㄴ text-align 등

강제 상속 : 상속 되지 않는 css 요소도 상속이 되게 만듦(inherit 값 사용)

----------------------------------------------------

css 선택자 우선순위
 ㄴ 같은 요소가 여러 선언의 대상이 된 경우, 어떤 선언의 css 속성을 우선 적용할지 결정하는 방법
 ㄴ 점수가 높은 선언이 우선
 ㄴ 점수가 같으면, 가장 마지막에 해석된 선언이 우선
 ㄴ !important(무한대) > inline style(1000점) > id(100점) > class(10점/ 가상클래스도 포함) > tag(1점 / 가상요소도 포함) > *(0점) > 상속(점수 계산 x)

 cf)
 .list li.item 21점
 .list li:hover 21점
 .box::before 11점
 #submit span 101점
 header .menu li:nth-child(2) 22점
 h1 1점
 :not(.box) 10점

 -----------------------------------------------------

 css 속성(property)
 박스 모델
  ㄴ 가로 : width / 세로 : height(기본값: auto, 단위: px, em, vw 등)
  ㄴ 인라인 : 컨텐츠 크기 만큼 자동으로 줄어듬
  ㄴ 블록 : 가로는 부모만큼 늘어나고 세로는 줄어듬.
  ㄴ max-width, max-height : 최대 가로/세로 (기본값: none 최소 너비 제한 x)
  ㄴ min-width, min-height : 최소 가로/세로 (기본값: 0)
  ㄴ margin : 요소의 외부 여백을 지정하는 단축 속성 (음수 가능, 기본값: 0 / auto 브라우저가 여백을 계싼(가운데 정렬에 활용))
  cf ) 단축 속성 (margin/padding/border-width/border-style/border-color)
       ㄴ margin: top,right,bottom,left
       ㄴ margin: top,bottom / left,right
       ㄴ margin: top / left,right / bottom
       ㄴ margin: top / right / bottom / left
  cf) 개별 속성(margin/padding)
       ㄴ margin-right: 우측 margin
       ㄴ margin-left: 좌측 margin
       ㄴ margin-top: 위측 margin
       ㄴ margin-bottom: 아래측 margin
  cf) margin의 음수
       ㄴ 외부의 여백이 줄어듬 / 겹칠 수 있음
  ㄴ padding : 요소의 내부 여백을 지정하는 단축 속성 / 개별 속성 (기본값: 0 / % : 부모 요소의 가로 너비에 대한 비율로 지정)
  ㄴ border : 요소의 테두리 선을 지정하는 단축 속성 / 개별 속성(선-두께 선-종류 선-색상 / border 지정 시 요소의 크기가 커짐)
  cf) border-width : 두께 / 단축 속성
      border-style : none, solid, dotted, dashed, double 등 / 단축 속성
      border-color : 색 지정 / 기본은 black / transparent : 투명 / 단축 속성
  cf) border-top: 두께 종류 색상;
      border-right-width: 두께;
      border-left-style: 종류;
      border-bottom-color: 색상;
  ㄴ border-radius : 모서리를 둥글게 깍음 (기본값 : 0 / px)
  cf) border-radius: 0 10px 0 10px; (top부터 시계방향 지정)
  ㄴ box-sizing : 요소의 크기 계싼 기준을 지정 (기본값: content-box - content 크기 / border-box : 내용 + padding + border / width,height 제어)
  ㄴ overflow : 요소 크기 이상으로 내용이 넘쳤을 떄, 보여짐을 제어하는 단축 속성 (기본값 : visible - 넘친 내용을 그대로 보여줌 / hidden - 넘친 내용을 잘라냄 / scroll - 넘친 내용을 잘라냄, 스크롤바 생성 / auto : 넘친 내용이 있는 경우에만 잘라내고 스크롤바 생성)
  cf) overflow-x : x축 제어
      overflow-y : y축 제어
  ㄴ display : 요소의 화면 출력(보여짐) 특성 (block : 상자 / inline : 글자 / inline-block: 글자+상자 / flex: 플렉스 박스(1차원 레이아웃) / grid : 그리드(2차원 레이아웃) / none : 화면에서 사라짐 / 기타등등(table-cll, table-row, table))
  ㄴ opacity : 요소의 투명도 (기본값 : 1 / 0~1 사이의 소수점으로 표현 / 0이면 안보임)

 글꼴, 문자
  ㄴ font-style : 글자의 기울기(기본값: normal / italic : 이텔릭체 / oblique : 기울어진 글자)
  ㄴ font-weight : 글자의 두께 (기본값: 400,normal / bold: 700 / 1000~900 / border : 상위보다 두껍게 / lighter : 상위보다 얇게)
  ㄴ font-size : 글자의 크기 (기본값: 16px / px)
  ㄴ line-height: 한줄의 높이, 행간과 유사 (기본값: normal,1 / 숫자 : 요소의 글꼴 크기의 배수 / 단위)
  ㄴ font-famil : 글꼴 지정 (ex) font-family: 글꼴1, 글꼴2, ...글꼴계열(필수) / 후보들을 지정 -> 글꼴을 사용할수 없는 환경인 경우 다음 후보 이용 / 띄어쓰기 있는 경우 따옴표 이용)
  cf) 바탕체 : serif
      고딕체 : sans-serif
      고정너비 글꼴 계열 : monospace
      필기체 : cursive
      장식 : fantasy
  ㄴ color : 글자의 색상(기본값: rgb(0,0,0), 검정)
  ㄴ text-align : 문자의 정렬방식(기본값 : left / right: 오른쪽 / center: 가운데 / justify: 양쪽 정렬)
  ㄴ text-decoration : 문자의 장식(기본값: none / underline: 밑줄 / overline: 윗줄 / line-through: 중앙 선)
  ㄴ text-indent : 문자 첫 줄의 들여쓰기(기본값: 0 / 단위 / 음수가능)

 배경
  ㄴ background-color : 요소의 배경 색상(기본값: transparent / 색)
  ㄴ background-image : 요소 배경 이미지 삽입(기본값: none / url("경로"))
  ㄴ backgorund-repeat : 요소 배경 이미지 반복(기본값: repeat / repeat-x: 이미지를 수평 반복 / repeat-y: 이미지를 수직 반복 / no-repeat: 반복 없음)
  ㄴ background-position : 요소 배경 이미지 위치(기본값: 0% 0%/ 0 ~ 100% 값 / 방향: top, bottom, left, right, center / 단위: x y)
  ㄴ background-size : 요소 배경 이미지 크기(기본값: auto,실제크기 / 단위 / cover: 비율을 유지, 요소의 더 넓은 너비에 맞춤 / contain: 비율을 유지, 요소의 더 짧은 너비에 맞춤)
  ㄴ background-attachment : 요소 배경 이미지 스크롤 특성(기본값: scroll, 이미지가 요소를 따라서 같이 스크롤 / fixed: 이미지가 뷰포트에 고정, 스크롤x / local: 요소 내 스크롤 시 이미지가 같이 스크롤)

 배치
 플렉스(정렬)
 전환
 변환
 띄움
 애니메이션
 그리드
 다단
 필터

 ----------------------------------------------------------

 css 단위
 px : 픽셀(점)
 % : 상대적 백분율
 em : 요소의 글꼴 크기 (1em = content font-size)
 rem : 루트 요소(html)의 글꼴 크기 (1rem = root font-size)
 vw : 뷰포트 가로 너비의 백분율
 vh : 부표트 세로 너비의 백분율

 -----------------------------------------------------------

 css 생상 표현 방법
 색상이름 : 브라우저에서 제공하는 색상 이름(red, tomato 등)
 hex : 색상코드 16진수 색상(#000, #fff)
 rgb : 빛의 삼원색 (rgb(255, 255, 255))
 rgba : 빛의 삼원색 + 투명도 (rgba(0,0,0,0.5))
 hsl : 색상, 채도, 명도 (hsl(120, 100%, 50%))
 hsla : 색상, 채도, 명도 + 투명도 (hsl(120, 100%, 50%, 0.3))

 ------------------------------------------------------------
