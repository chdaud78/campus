기본 문법
선택자(대상) { 속성(스타일의 종류): 값(스타일의 값); }
ex) div {color:red; font-size:50px;}

----------------------------------------------------

css 선언 방식
1. 내장 방식
 ㄴ <style></style>의 내용으로 스타일을 작성하는 방식

2. 링크 방식
 ㄴ <link />로 외부 css 문서를 가져와서 연결하는 방식
 ㄴ 병렬 연결

3. 인라인 방식
 ㄴ 요소의 스타일 속성에 직접 스타일을 작성하는 방식

4. @import 방식
 ㄴ css @import 규칙으로 css 문서 안에서 또 다른 css 문서를 가져와 연결하는 방식
 ㄴ 직렬 연결
 ㄴ 지연 됨.

 ----------------------------------------------------

 css 선택자
 1. 기본
  ㄴ * : 모든 요소를 선택(전체 선택자)
  ㄴ 태그 : 태그 이름이 ~인 요소 선택
  ㄴ 클래스(.) : html class 속성의 값 선택
  ㄴ 아이디(#) : Html id 속성의 값 선택

 2. 복합
  ㄴ 일치 : 선택자 여러개를 동시에 만족하는 요소 선택.(ex) span.orange / 태그를 제일 먼저 .orangespan 이렇게 안됨.)
  ㄴ 자식(>) : 선택자의 자식 요소 선택 (ex) ul > .orange)
  ㄴ 하위(공백) : 선택자의 하위 요소 선택 (ex) div .orange)
  ㄴ 인접 형제(+) : 선택자의 다음 형제 요소 하나를 선택 (ex) .orange + li)
  ㄴ 일반 형제(~) : 선택자의 다음 형제 요소 모두를 선택 (ex) .orange ~ li)

 3. 가상 클래스
  ㄴ :hover : 마우스 커서가 올라가 있는 동안 선택
  ㄴ :active : 마우스를 클릭하고 있는 동안 선택
  ㄴ :focus : 포커스가 되면 선택(focus 가능한 요소만 대표적으로 input이 가능 tabindex=-1으로 설정시 focus 가능하게 만듬.)
  ㄴ :first-child : 선택자가 형제 요소 중 첫째라면 선택
  ㄴ :last-child : 선택자가 형제 요소 중 막내라면 선택
  ㄴ :nth-child(n) : 선택자가 형제 요소 중 n째라면 선택 (n은 0부터 시작)
  ㄴ ABC:not(XYZ) : XYZ선택자가 아닌 요소 선택
  cf)
  .fruits span:first-child -> 딸기 - span은 형제 중 첫째이므로 선택
  .fruits div:first-child -> x - div는 형제 중 첫째가 아니므로 선택
  .fruits h3:last-child -> 사과 - h3는 형제 중 막내이므로 선택
  .fruits *:nth-child(2) -> 수박 - 모든 형제들 중 2번째는 수박
  .fruits *:nth-child(2n) -> 수박, 망고 - 모든 형제들중 2n번(짝수) 선택.
  .fruits *:nth-child(2n+1) -> 딸기, 오렌지, 사과 - 모든 형제들중 2n+1번(홀수) 선택.
  .fruits *:nth-child(n+2) -> 수박, 오렌지, 망고, 사과 - 모든 형제들중 2번째 이후 선택.
  .fruits *:not(span) -> 오렌지, 망고, 사과 - fruits 하위 모든 요소들 중 span이 아닌것은 망고 사과
  <div class="fruits">
    <span>딸기</span>
    <span>수박</span>
    <div>오렌지</div>
    <p>망고</p>
    <h3>사과</h3>
  </div>

 4. 가상 요소
 5. 속성